/** DEPLOYMENT SPECIFIC CONSTANTS **/
const privateKey = "22603ed5efb362b9448ff51091f0aaf1211c7b91c3d2aaf52af416ec1a0667c3";
const contract_addr = "0xA4ee1144f8D6990Dbd3Dd98054baEC4252d1750A";
const host = "http://localhost:8545";
const contract_path = '/repo/VELOCK/VELOCKSC/build/contracts/Mileage.json';
/** ****************************  **/
var Web3 = require("web3");
require("jquery");
var provider = new Web3.providers.HttpProvider(host);
var web3 = new Web3(provider);
var contract = require("@truffle/contract");
var mileageArtifact = require(contract_path);
var Mileage = contract(mileageArtifact);
Mileage.setProvider(provider);
var day = new Date();
var i = 0;
var n = 4; //Number of entries generated by the script
var km = 0;
var date;
while(i<n) {
    km = km + 1000;
    date = day.setDate(day.getDate() + i);
    i++;
    handleCommit(km, date);
}
function handleCommit(mileage,timestamp) {
    var mileageInstance;
    var account = web3.eth.accounts.privateKeyToAccount(privateKey);
    console.log(account);
    Mileage.at(contract_addr).then(function(instance) {
        mileageInstance = instance;
        var add = mileageInstance.storeMileage(mileage,timestamp,{from: account});
        return add;
        }).catch(function(err) {
            console.log(err.message);
        });
}


app.init().then(function () {

    }
)